{"version":3,"sources":["app.css","_shared/_main.scss","_utilities/_variable.scss","_shared/_grid.scss","_utilities/_mixin.scss"],"names":[],"mappings":"AAAA,yCAAyC;ACCzC;EACE,8BAA6B;EAC7B,yCAAwC;CACzC;;ADED,yCAAyC;ACAzC;;EAEE,YCyB8B;EDxB9B,kBAAiB;CAClB;;ADGD,0CAA0C;ACZ1C;EAYE,8CAA6C;CAC9C;;ADID,0CAA0C;ACF1C;EACE,mBAAkB;EAClB,mBAAkB;EAClB,UAAS;EACT,WAAU;EACV,uBCV8B;EDW9B,wBAAuB;EACvB,gBAAe;EAEf,oCAAmC;EACnC,mCAAkC;CACnC;;ADID,0CAA0C;ACF1C;EACE,+BAAsB;UAAtB,uBAAsB;CAMvB;;ADAD,0CAA0C;ACP1C;EAKI,+BAAsB;UAAtB,uBAAsB;CACvB;;ADMH,0CAA0C;ACH1C;;;;;EAKE,gBAAe;EACf,UAAS;CACV;;ADMD,0CAA0C;ACJ1C;;EAEE,kBAAiB;CAClB;;ADOD,0CAA0C;ACL1C;EACE,cAAa;EACb,oBAAmB;CACpB;;ADQD,0CAA0C;AAC1C;ECNE,8BAA6B;EAC7B,qBAAoB;CACrB;;ADSD,0CAA0C;AAC1C;;ECNE,yBAAwB;CACzB;;ADUD,0CAA0C;ACR1C;EACE,eAAc;CACf;;ADWD,0CAA0C;ACT1C;;;EAGE,UAAS;CACV;;ADYD,0CAA0C;ACV1C;EACE,UAAS;EACT,WAAU;CAKX;;ADSD,0CAA0C;AChB1C;EAKI,iBAAgB;CACjB;;ADeH,0CAA0C;ACZ1C;EACE,cAAa;EACb,sBAAqB;CACtB;;ADeD,0CAA0C;ACb1C;EACE,yBAAgB;KAAhB,sBAAgB;UAAhB,iBAAgB;CACjB;;ADgBD,yCAAyC;AG1GzC;EACE,YD6B8B;EC5B9B,oBAAmB;EACnB,mBAAkB;EAClB,mBAAkB;EAClB,kBAAiB;CAClB;;AH6GD,0CAA0C;AGxG1C;EAEE,YDiB8B;CCI/B;;ACgJC;EJzDA,0CAA0C;EG9G5C;IAII,iBAAgB;GAmBnB;CH2FA;;AIqDC;EJlDA,0CAA0C;EGrH5C;IAOI,iBAAgB;GAgBnB;CHkGA;;AI8CC;EJ3CA,0CAA0C;EG5H5C;IAUI,iBAAgB;GAanB;CHyGA;;AIuCC;EJpCA,0CAA0C;EGnI5C;IAaI,kBAAiB;GAUpB;CHgHA;;AIgCC;EJ7BA,0CAA0C;EG1I5C;IAgBI,kBAAiB;GAOpB;CHuHA;;AAED,0CAA0C;AG7HxC;EAEE,YDF4B;CCG7B","file":"../app.css","sourcesContent":["/* line 2, src/scss/_shared/_main.scss */\nhtml {\n  -ms-overflow-style: scrollbar;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* line 7, src/scss/_shared/_main.scss */\nhtml,\nbody {\n  width: 100%;\n  min-height: 100vh;\n}\n\n/* line 13, src/scss/_shared/_main.scss */\nhtml {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n/* line 17, src/scss/_shared/_main.scss */\nbody {\n  overflow-x: hidden;\n  position: relative;\n  margin: 0;\n  padding: 0;\n  background-color: #fff;\n  line-height: 1.42857143;\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* line 30, src/scss/_shared/_main.scss */\n* {\n  box-sizing: border-box;\n}\n\n/* line 33, src/scss/_shared/_main.scss */\n*:before, *:after {\n  box-sizing: border-box;\n}\n\n/* line 39, src/scss/_shared/_main.scss */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-size: 100%;\n  margin: 0;\n}\n\n/* line 48, src/scss/_shared/_main.scss */\nbutton,\ninput {\n  overflow: visible;\n}\n\n/* line 53, src/scss/_shared/_main.scss */\nbutton[disabled] {\n  opacity: 0.55;\n  cursor: not-allowed;\n}\n\n/* line 58, src/scss/_shared/_main.scss */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n/* line 63, src/scss/_shared/_main.scss */\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/* line 68, src/scss/_shared/_main.scss */\ntextarea {\n  overflow: auto;\n}\n\n/* line 72, src/scss/_shared/_main.scss */\np,\nh1, h2, h3, h4, h5, h6,\nhr {\n  margin: 0;\n}\n\n/* line 78, src/scss/_shared/_main.scss */\nul {\n  margin: 0;\n  padding: 0;\n}\n\n/* line 82, src/scss/_shared/_main.scss */\nul li {\n  list-style: none;\n}\n\n/* line 87, src/scss/_shared/_main.scss */\na {\n  outline: none;\n  text-decoration: none;\n}\n\n/* line 92, src/scss/_shared/_main.scss */\ninput[type=\"text\"] {\n  appearance: none;\n}\n\n/* line 4, src/scss/_shared/_grid.scss */\n.c-grid, .c-grid-fluid {\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n/* line 15, src/scss/_shared/_grid.scss */\n.c-grid {\n  width: 100%;\n}\n\n@media screen and (min-width: 576px) {\n  /* line 15, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 540px;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  /* line 15, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 720px;\n  }\n}\n\n@media screen and (min-width: 992px) {\n  /* line 15, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 960px;\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  /* line 15, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1140px;\n  }\n}\n\n@media screen and (min-width: 1600px) {\n  /* line 15, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1400px;\n  }\n}\n\n/* line 34, src/scss/_shared/_grid.scss */\n.c-grid-fluid {\n  width: 100%;\n}\n","\nhtml {\n  -ms-overflow-style: scrollbar;\n  -webkit-tap-highlight-color: transparent;\n}\n\nhtml,\nbody {\n  width: $d-all;\n  min-height: 100vh;\n}\n\nhtml {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\nbody {\n  overflow-x: hidden;\n  position: relative;\n  margin: 0;\n  padding: 0;\n  background-color: $c-white;\n  line-height: 1.42857143;\n  font-size: 16px;\n  //font-family: ...;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n* {\n  box-sizing: border-box;\n\n  &:before,\n  &:after {\n    box-sizing: border-box;\n  }\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-size: 100%;\n  margin: 0;\n}\n\nbutton,\ninput {\n  overflow: visible;\n}\n\nbutton[disabled] {\n  opacity: 0.55;\n  cursor: not-allowed;\n}\n\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\ntextarea {\n  overflow: auto;\n}\n\np,\nh1, h2, h3, h4, h5, h6,\nhr {\n  margin: 0;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n\n  li {\n    list-style: none;\n  }\n}\n\na {\n  outline: none;\n  text-decoration: none;\n}\n\ninput[type=\"text\"] {\n  appearance: none;\n}\n","@import \"function\";\n\n////\n/// @group  Variable\n////\n\n///\n/// @name   object\n///\n$object: (\n  colors : (\n    white                 : #fff,\n    black                 : #000,\n\n    primary               : #4285f4,\n\n    success               : #00c851,\n    info                  : #33b5e5,\n    warning               : #ff8800,\n    danger                : #cc0000,\n\n    grey                  : #808080,\n    lightGrey             : #d3d3d3,\n    darkGrey              : #a9a9a9,\n    dimGray               : #696969,\n    snow                  : #fffafa,\n    whiteSmooke           : #f5f5f5,\n    gainsboro             : #dcdcdc,\n    silver                : #c0c0c0,\n    yellow                : #ffff00,\n    aliceBlue             : #f0f8ff\n  ),\n  dimension : (\n    all                   : 100%,\n    fhd                   : 1920px,\n    hd                    : 1440px,\n    wide                  : 1200px,\n    desktop               : 992px,\n    tablet                : 768px,\n    mobile                : 576px,\n    mobile-xs             : 320px,\n  ),\n);\n\n///\n/// MAIN PALLET\n/// ===============\n$c-white                  : return-value(colors, white);\n$c-black                  : return-value(colors, black);\n\n$c-primary                : return-value(colors, primary);\n\n$c-success                : return-value(colors, success);\n$c-info                   : return-value(colors, info);\n$c-warning                : return-value(colors, warning);\n$c-danger                 : return-value(colors, danger);\n\n$c-grey                   : return-value(colors, grey);\n$c-lightGrey              : return-value(colors, lightGrey);\n$c-darkGrey               : return-value(colors, darkGrey);\n$c-snow                   : return-value(colors, snow);\n$c-whiteSmooke            : return-value(colors, whiteSmooke);\n$c-gainsboro              : return-value(colors, gainsboro);\n$c-silver                 : return-value(colors, silver);\n$c-yellow                 : return-value(colors, yellow);\n$c-aliceBlue              : return-value(colors, aliceBlue);\n\n$d-all                    : return-value(dimension, all);\n$d-fhd                    : return-value(dimension, fhd);\n$d-hd                     : return-value(dimension, hd);\n$d-wide                   : return-value(dimension, wide);\n$d-desktop                : return-value(dimension, desktop);\n$d-tablet                 : return-value(dimension, tablet);\n$d-mobile                 : return-value(dimension, mobile);\n$d-mobile-xs              : return-value(dimension, mobile-xs);\n\n///\n/// ADDITIONAL PALLET\n/// ===============","///\n/// ADDITIONALLY\n/// ===============\n%grid {\n  width: $d-all;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n///\n/// MAIN\n/// ===============\n.c-grid {\n  @extend %grid;\n  width: $d-all;\n  @include respond(s) {\n    max-width: 540px;\n  }\n  @include respond(m) {\n    max-width: 720px;\n  }\n  @include respond(l) {\n    max-width: 960px;\n  }\n  @include respond(el) {\n    max-width: 1140px;\n  }\n  @include respond(w) {\n    max-width: 1400px;\n  }\n\n  &-fluid {\n    @extend %grid;\n    width: $d-all;\n  }\n}\n","////\n/// @group  Mixin\n////\n\n/// \n/// Mixin setting the width and height element.\n///\n/// @name   mixinDimensions\n///\n/// @param  {String}  $width             - The width property sets the width of an element.\n/// @param  {String}  $height  [$width]  - The height property sets the height of an element.\n///\n/// @see    $object\n///\n/// @example\n///   <selector> {\n///     @include mixinDimensions(100%);\n///     @include mixinDimensions(100%, 50%);\n///   }\n///\n@mixin dimensions($width, $height:$width) {\n\twidth: $width;\n\theight: $height;\n}\n\n\n///\n/// Mixin generate animation. It uses an additional function :\n/// - **map-get()**   - returns the value in a map associated with the given key. If the map doesnâ€™t have such a key, returns null;\n/// - **map-merge()** - Merges two maps together into a new map. Keys in $map2 will take precedence over keys in $map1;\n///\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#map_get-instance_method       map-get()\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#map_merge-instance_method     map-merge()\n///\n/// @name   mixinKeyframes\n///\n/// @param  {String}  $keyName - Animation Name\n/// @param  {Object}  $options\n///\n/// @example\n///   <selector> {\n///     @include moduleKeyframes(clockLeft,\n///       (\n///         opacityStart      : 0.8,\n///         opacityEnd        : 1,\n///         transformStart    : rotate(360deg)\n///       )\n///       ||\n///       (\n///         opacityStart      : 0.5,\n///         opacityEnd        : 1,\n///         transformDouble   : (rotate(-360deg) scale(0.5))\n///       )\n///     );\n///   }\n///\n@mixin keyframes($keyName, $options: ()) {\n\t$configuration: map-merge((), $options);\n\n\t@keyframes #{$keyName} {\n\t\tfrom {\n\t\t\topacity: map-get($configuration, opacityStart);\n\t\t\ttransform: map-get($configuration, transformStart);\n\t\t}\n\t\tto {\n\t\t\topacity: map-get($configuration, opacityEnd);\n\t\t\ttransform: map-get($configuration, transformEnd);\n\t\t}\n\t}\n}\n\n\n///\n/// Mixin centered elements\n///\n/// @name\t\t\tcentered\n///\n/// @param  {String}  $pos - The position property specifies the type of positioning method used for an element\n/// @param  {String}  $side-1 - CSS Positioning Properties\n/// @param  {String}  $side-2 - CSS Positioning Properties\n///\n/// @see      $object\n///\n/// @example\n///   <selector> {\n///     @include centered([absolute | relative | fixed], [left | right], [top | bottom]);\n///   }\n///\n@mixin centered($pos, $side-1, $side-2) {\n\tposition: $pos;\n\t$side-1: 50%;\n\t$side-2: 50%;\n\ttransform: translate(-50%, -50%);\n}\n\n\n///\n/// Mixin box-shadow\n///\n/// @name\t\t\tboxShadow\n///\n/// @param  {Number | String}  $name - The box-shadow property attaches one or more shadows to an element.\n///\n/// @see      $object\n///\n/// @example\n///   <selector> {\n///     @include boxShadow([1 | 2 | 3 | 4 | 5]);\n///   }\n///\n$boxShadowObj: (\n\t\"1\" : \"0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2)\",\n\t\"2\" : \"0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.3)\",\n\t\"3\" : \"0 6px 10px 0 rgba(0,0,0,0.14), 0 1px 18px 0 rgba(0,0,0,0.12), 0 3px 5px -1px rgba(0,0,0,0.3)\",\n\t\"4\" : \"0 8px 10px 1px rgba(0,0,0,0.14), 0 3px 14px 2px rgba(0,0,0,0.12), 0 5px 5px -3px rgba(0,0,0,0.3)\",\n\t\"5\" : \"0 16px 24px 2px rgba(0,0,0,0.14), 0 6px 30px 5px rgba(0,0,0,0.12), 0 8px 10px -5px rgba(0,0,0,0.3)\",\n) !default;\n\n@mixin boxShadow($name) {\n\t@if map-has-key($boxShadowObj, $name) {\n\t\tbox-shadow: #{inspect(map_get($boxShadowObj, $name))};\n\t} @else {\n\t\t@warn \"Unfortunately, no value could be retrieved from `#{$boxShadowObj}`. Please make sure it is defined in `$boxShadowObj` map.\";\n\t}\n}\n\n\n///\n/// Mixin transition\n///\n/// @name\t\t\ttransition\n///\n/// @param  {String}  $rest... - CSS properties that are to be animated.\n///\n/// @see      $object\n///\n/// @example\n///   <selector> {\n///     @include transition([color | opacity | border | etc]);\n///   }\n///\n@mixin transition($rest...) {\n\t$list: null;\n\n\t@each $prop in ($rest) {\n\t\t$list: append($list, $prop 0.3s ease-in-out, comma);\n\t}\n\n\ttransition: $list;\n}\n\n\n///\n/// Mixin media queries.\n///\n/// @name     respond\n///\n/// @param    {String}  $media [$text-mobile | $text-tablet | $text-small | $text-medium | $text-large] - Value that identifies one of the options and breakpoint.\n///\n/// @see      $object\n///\n/// @example\n///   <selector> {\n///     @include respond($text-mobile) { @content };\n///   }\n///   <selector> {\n///     @include respond($text-medium) { @content };\n///   }\n///\n$breakpointsMedia: (\n\t\"es\"        : \"(min-width: 320px)\",\n\t\"s\"         : \"(min-width: 576px)\",\n\t\"m\"         : \"(min-width: 768px)\",\n\t\"l\"         : \"(min-width: 992px)\",\n\t\"el\"        : \"(min-width: 1200px)\",\n\t\"w\"         : \"(min-width: 1600px)\",\n\t\"hd\"        : \"(min-width: 1920)\"\n) !default;\n\n@mixin respond($name) {\n\t@if map-has-key($breakpointsMedia, $name) {\n\t\t@media screen and #{inspect(map-get($breakpointsMedia, $name))} {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@warn \"Unfortunately, no value could be retrieved from `#{$breakpointsMedia}`. Please make sure it is defined in `$breakpointsMedia` map.\";\n\t}\n}\n"],"sourceRoot":"../../src"}